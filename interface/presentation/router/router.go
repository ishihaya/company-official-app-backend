package router

import (
	"fmt"
	"log"
	"net/http"

	// docs is generated by Swag CLI, you have to import it.
	"github.com/ishihaya/company-official-app-backend/interface/presentation/middleware"
	_ "github.com/ishihaya/company-official-app-backend/pkg/swagger"

	"github.com/gin-gonic/gin"
	"github.com/ishihaya/company-official-app-backend/di"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

type Router struct {
	*gin.Engine
}

func New() *Router {
	engine := gin.Default()
	gin.SetMode(gin.ReleaseMode)
	return &Router{Engine: engine}
}

func (r *Router) HealthCheck() {
	r.GET("/health", func(c *gin.Context) {
		c.JSON(http.StatusOK, "ok")
	})
}

func (r *Router) Swagger() {
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
}

func (r *Router) Routes() {
	authMiddleware := di.InitAuth()
	userHandler := di.InitUser()

	r.Use(authMiddleware.AuthAPI)
	r.Use(middleware.CurrentTime)

	r.GET("/user", userHandler.Get)
	r.POST("/user", userHandler.Create)
}

func (r *Router) RunServer(port int) {
	if err := r.Run(fmt.Sprintf(":%d", port)); err != nil {
		log.Fatal(err)
	}
}
