// Code generated by MockGen. DO NOT EDIT.
// Source: domain/operator/app_id.go

// Package mock_operator is a generated GoMock package.
package mock_operator

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/ishihaya/company-official-app-backend/domain/entity"
)

// MockAppIDOperator is a mock of AppIDOperator interface.
type MockAppIDOperator struct {
	ctrl     *gomock.Controller
	recorder *MockAppIDOperatorMockRecorder
}

// MockAppIDOperatorMockRecorder is the mock recorder for MockAppIDOperator.
type MockAppIDOperatorMockRecorder struct {
	mock *MockAppIDOperator
}

// NewMockAppIDOperator creates a new mock instance.
func NewMockAppIDOperator(ctrl *gomock.Controller) *MockAppIDOperator {
	mock := &MockAppIDOperator{ctrl: ctrl}
	mock.recorder = &MockAppIDOperatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppIDOperator) EXPECT() *MockAppIDOperatorMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockAppIDOperator) Generate(t time.Time) (entity.AppID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", t)
	ret0, _ := ret[0].(entity.AppID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockAppIDOperatorMockRecorder) Generate(t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockAppIDOperator)(nil).Generate), t)
}
