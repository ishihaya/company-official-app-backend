name: Deploy dev
on:
  push:
    branches: [ main ]
  workflow_dispatch:
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_READ_WRITE_KEY: ${{ secrets.GCP_SA_READ_WRITE_KEY }}
  GCP_SA_MYSQL_CLIENT_KEY: ${{ secrets.GCP_SA_MYSQL_CLIENT_KEY }}
  TF_VAR_app_version: ${{ github.sha }}
  TF_VAR_mysql_root_password: ${{ secrets.MYSQL_ROOT_PASSWORD }}
  TF_VAR_mysql_password: ${{ secrets.MYSQL_PASSWORD }}
  TF_VAR_mysql_migration_ro_password: ${{ secrets.MYSQL_MIGRATION_READ_ONLY_PASSWORD }}
jobs:
  build_and_push:
    name: Build and push
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ env.GCP_SA_READ_WRITE_KEY }}
          export_default_credentials: true
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-company-official-app-backend-image-$TF_VAR_app_version
          restore-keys: ${{ runner.os }}-docker-company-official-app-backend-image-
      - name: Configure docker to use the gcloud cli
        run: gcloud auth configure-docker --quiet
      - name: Build and push image
        uses: docker/build-push-action@v2
        env:
          IMAGE: asia.gcr.io/${{ env.GCP_PROJECT_ID }}/company-official-app-backend:${{ env.TF_VAR_app_version }}
        with:
          context: .
          file: build/app/Dockerfile
          push: true
          target: deploy
          tags: ${{ env.IMAGE }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_push
    environment:
      name: dev
    defaults:
      run:
        working-directory: ./terraform/envs/dev
    steps:
      - uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ env.GCP_SA_READ_WRITE_KEY }}
          export_default_credentials: true
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
      - name: Init
        run: terraform init -no-color -input=false
      - name: Validate
        run: terraform validate -no-color
      - name: Apply
        run: terraform apply -no-color -input=false -auto-approve
  migrate_db:
    name: Migrate DB
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      PORT: 3307
    steps:
      - uses: actions/checkout@v2
      - name: Install sqldef
        run: |
          mkdir -p $HOME/bin/
          wget -O - https://github.com/k0kubun/sqldef/releases/latest/download/mysqldef_linux_amd64.tar.gz | tar xvz
          mv mysqldef $HOME/bin/mysqldef
          echo "$HOME/bin" >> $GITHUB_PATH
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account_key: ${{ env.GCP_SA_MYSQL_CLIENT_KEY }}
          export_default_credentials: true
      - name: Install Cloud SQL Proxy
        run: |
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
      - name: Connect Cloud SQL Proxy
        run: ./cloud_sql_proxy -instances=$GCP_PROJECT_ID:asia-northeast1:app-mysql-01=tcp:0.0.0.0:$PORT &
      - name: migrate DB
        run: make migrate -e MYSQL_ROOT_PASSWORD=$TF_VAR_mysql_root_password -e DB_PORT=$PORT -e MYSQL_DATABASE=app-mysql-database