name: Terraform plan

on:
  pull_request:
    branches: [ main ]
    paths:
      - terraform/**
  workflow_dispatch:
jobs:
  terraform_plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    environment:
      name: dev
    defaults:
      run:
        working-directory: ./terraform/envs/dev
    steps:
      - uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_READ_ONLY_KEY }}
          export_default_credentials: true
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
      - name: Fmt check
        id: fmt
        run: terraform fmt -recursive -check
        continue-on-error: true
      - name: Init
        id: init
        run: terraform init -input=false
        continue-on-error: true
      - name: Validate
        id: validate
        run: terraform validate
        continue-on-error: true
      - name: Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - name: Comment result of plan
        uses: actions/github-script@v4
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
          ERR: "${{ steps.plan.outputs.stderr }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### Terraform fmt check \`${{ steps.fmt.outcome }}\`
            #### Terraform init \`${{ steps.init.outcome }}\`
            #### Terraform validate \`${{ steps.validate.outcome }}\`
            #### Terraform plan \`${{ steps.plan.outcome }}\`
            <details>
              <summary>Show Plan</summary>
              
              \`\`\`
                ${process.env.PLAN}
                ${process.env.ERR}
              \`\`\`
            
            </details>`;
            
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: judge
        if: steps.fmt.outcome != 'success' || steps.validate.outcome != 'success' || steps.plan.outcome != 'success'
        run: exit 1